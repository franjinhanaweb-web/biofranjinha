// ü§ñ Teste de reCAPTCHA - Vers√£o Corrigida
// Cole este c√≥digo no console para verificar se o reCAPTCHA est√° funcionando

console.log('ü§ñ TESTE DE RECAPTCHA - VERS√ÉO CORRIGIDA\n');

// 1. Verificar se reCAPTCHA est√° carregado
console.log('1. Verificando reCAPTCHA:');
console.log('grecaptcha dispon√≠vel:', typeof window.grecaptcha !== 'undefined' ? '‚úÖ SIM' : '‚ùå N√ÉO');

if (typeof window.grecaptcha !== 'undefined') {
  console.log('reCAPTCHA carregado:', window.grecaptcha);
  console.log('M√©todos dispon√≠veis:', Object.keys(window.grecaptcha));
  
  // 2. Verificar se tem o m√©todo ready
  if (typeof window.grecaptcha.ready === 'function') {
    console.log('‚úÖ reCAPTCHA v3 est√° dispon√≠vel');
    
    // 3. Testar o reCAPTCHA
    window.grecaptcha.ready(() => {
      console.log('‚úÖ reCAPTCHA est√° pronto');
      
      // 4. Verificar se tem o m√©todo execute
      if (typeof window.grecaptcha.execute === 'function') {
        console.log('‚úÖ M√©todo execute dispon√≠vel');
        
        // 5. Tentar executar o reCAPTCHA
        const siteKey = '6LfWqsIrAAAAAJAj86oKq2uD7ELdYYZNsQeA2v1z'; // Site Key hardcoded para teste
        console.log('Site Key:', siteKey);
        
        window.grecaptcha.execute(siteKey, { action: 'test' })
          .then(token => {
            console.log('‚úÖ reCAPTCHA executado com sucesso!');
            console.log('Token (primeiros 20 chars):', token.substring(0, 20) + '...');
            console.log('Token completo:', token);
            
            // 6. Agora testar se o App Check funciona
            console.log('\nüõ°Ô∏è TESTANDO APP CHECK AP√ìS RECAPTCHA:');
            const appCheck = window.appCheck;
            if (appCheck && typeof appCheck.getToken === 'function') {
              console.log('‚úÖ App Check agora tem getToken!');
              appCheck.getToken()
                .then(({ token: appCheckToken }) => {
                  console.log('‚úÖ Token do App Check obtido:', appCheckToken ? 'Token v√°lido' : 'Token vazio');
                  if (appCheckToken) {
                    console.log('Token App Check (primeiros 20 chars):', appCheckToken.substring(0, 20) + '...');
                  }
                })
                .catch(error => {
                  console.error('‚ùå Erro ao obter token do App Check:', error);
                });
            } else {
              console.log('‚ùå App Check ainda n√£o tem getToken');
            }
          })
          .catch(error => {
            console.error('‚ùå Erro ao executar reCAPTCHA:', error);
            console.log('Poss√≠veis causas:');
            console.log('1. Site Key incorreta');
            console.log('2. Dom√≠nio n√£o autorizado');
            console.log('3. reCAPTCHA n√£o configurado corretamente');
          });
      } else {
        console.log('‚ùå M√©todo execute n√£o dispon√≠vel');
      }
    });
  } else {
    console.log('‚ùå reCAPTCHA v3 n√£o est√° dispon√≠vel');
  }
} else {
  console.log('‚ùå reCAPTCHA n√£o foi carregado');
  console.log('Verifique se:');
  console.log('1. O script do reCAPTCHA est√° sendo carregado');
  console.log('2. N√£o h√° erros de rede');
  console.log('3. O dom√≠nio est√° autorizado');
}

console.log('\nüîç Verificando Network tab:');
console.log('Procure por requisi√ß√µes para:');
console.log('- recaptcha/api.js');
console.log('- recaptcha/api2/anchor');
console.log('- recaptcha/api2/reload');
console.log('Status deve ser 200 (sucesso)');
